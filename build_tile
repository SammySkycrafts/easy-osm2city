#! /bin/bash
# Copyright (C) 2018-2019 Merspieler, merspieler _at_ airmail.cc
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

first=1
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
	-b|--bounds)
		man_bounds="$2"
		shift # past argument
		shift # past value
	;;

	-t|--threads)
		man_threads="$2"
		shift # past argument
		shift # past value
	;;

	-z|--zip)
		create_zip=1
		shift # past argument
	;;

	-h|--help)
		echo "usage: build_tile <project> [OPTIONS]"
		echo "Builds the tiles with osm2city"
		echo ""
		echo "OPTIONS"
		echo "  -h, --help      Shows this help and exit"
		echo "  -b, --bounds    Overwriting bounds from the project settings"
		echo "  -t, --threads   Number of threads used for building"
		echo "                  This will overwrite the value from the general-settings file"
		echo "  -z, --zip       Create a ready to distribute zip file on success"
		exit 0
	;;

	*)
		if [ $first == "1" ]; then
			project="$key"
			shift #past project
			first=0
		else
			echo "Unknown option $key"
			exit 1
		fi
	;;
esac
done

if [ -z "$project" ]; then
	echo "No project was given. See build -h for details"
	exit 1
fi

if [ ! -f "projects/$project/params.ini" ]; then
	echo "Project does not exsist. Please run ./create-project to create one"
	exit 1
fi


source venv/bin/activate > /dev/null 2>&1
if [ $? == 1 ]; then
	echo "Couldn't find the venv. Please run './create-venv' to create one"
	exit 1
fi
source projects/$project/settings > /dev/null 2>&1
if [ $? == 1 ]; then
	echo "Couldn't find the settings file for the given project."
	echo "Please check if the project exsists and contains the 'settings' file."
	echo "To create a new project run './create-project'"
	exit 1
fi
source general-settings > /dev/null 2>&1
if [ $? == 1 ]; then
	echo "Couldn't find the general settings. Please run ./install first."
fi

if [ ! -z "$man_threads" ]; then
	threads=$man_threads
fi

if [ ! -z "$man_bounds" ]; then
	bounds=$man_bounds
else
	# Only remove exceptions.log if whole project is build
	rm -f osm2city-exceptions.log
fi

# change to the project dir and build
cd projects/$project
time ( python3 ../../osm2city/build_tiles.py -f params.ini -b "$bounds" -p "$threads" -m 1 2>&1 ) 2> exec-time
ret=$?

if [ "$create_zip" == "1" ]; then
	echo "Creating zip file..."
	zip -rq $project.zip scenery/
fi

cat exec-time | grep "real" | sed "s/real\t\([0-9]*\)m\([0-9]*\).*/Building this tile took \1 minutes and \2 seconds./"

# Forward exit code
exit $ret
